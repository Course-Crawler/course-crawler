services:
  video-recorder1: &video-recorder-base
    container_name: video-recorder1
    build:
      context: ./video-recorder
      dockerfile: Dockerfile
    environment:
      - EMAIL=${EMAIL}
      - PASSWORD=${PASSWORD}
      - VIDEO_TO_RECORD_ID=0
    env_file:
      - config/.env.video-recorder
    restart: unless-stopped
    volumes:
      - ${VIDEO_DIR_PATH}:/temp/videos
    depends_on:
      video-server:
        condition: service_started

  video-recorder2:
    <<: *video-recorder-base
    container_name: video-recorder2
    environment:
      - EMAIL=${EMAIL}
      - PASSWORD=${PASSWORD}
      - VIDEO_TO_RECORD_ID=1

  video-recorder3:
    <<: *video-recorder-base
    container_name: video-recorder3
    environment:
      - EMAIL=${EMAIL}
      - PASSWORD=${PASSWORD}
      - VIDEO_TO_RECORD_ID=2

  video-recorder4:
    <<: *video-recorder-base
    container_name: video-recorder4
    environment:
      - EMAIL=${EMAIL}
      - PASSWORD=${PASSWORD}
      - VIDEO_TO_RECORD_ID=3

  video-recorder5:
    <<: *video-recorder-base
    container_name: video-recorder5
    environment:
      - EMAIL=${EMAIL}
      - PASSWORD=${PASSWORD}
      - VIDEO_TO_RECORD_ID=4

  video-recorder6:
    <<: *video-recorder-base
    container_name: video-recorder6
    environment:
      - EMAIL=${EMAIL}
      - PASSWORD=${PASSWORD}
      - VIDEO_TO_RECORD_ID=5

  video-server:
    container_name: video-server
    build:
      context: ./video-server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - config/.env.video-server
    restart: unless-stopped
    develop:
      watch:
        - path: ./video-server/main.go
          action: rebuild

  video-server-dapr:
    container_name: video-server-dapr
    image: daprio/daprd:1.13.5
    command:
      [
        "./daprd",
        "-app-id",
        "video-server",
        "-app-port",
        "3000",
        "-placement-host-address",
        "dapr-placement:40000",
        "-dapr-http-port",
        "3500",
        "-dapr-grpc-port",
        "50001",
        "-components-path",
        "/components",
        "-config",
        "/config/config.yaml",
      ]
    volumes_from:
      - dapr-config
    restart: unless-stopped
    depends_on:
      video-server:
        condition: service_started
      dapr-placement:
        condition: service_started
      dapr-config:
        condition: service_started
    network_mode: "service:video-server"

  video-compressor:
    container_name: video-compressor
    build:
      context: ./video-compressor
      dockerfile: Dockerfile
    ports:
      - "8080"
    env_file:
      - config/.env.video-compressor
    restart: unless-stopped
    volumes:
      - ${VIDEO_DIR_PATH}:/temp/videos
    develop:
      watch:
        - path: ./video-compressor/main.go
          action: rebuild

  video-compressor-dapr:
    container_name: video-compressor-dapr
    image: daprio/daprd:1.13.5
    command:
      [
        "./daprd",
        "-app-id",
        "video-compressor",
        "-app-port",
        "8080",
        "-placement-host-address",
        "dapr-placement:40000",
        "-dapr-http-port",
        "3501",
        "-dapr-grpc-port",
        "50002",
        "-components-path",
        "/components",
        "-config",
        "/config/config.yaml",
      ]
    volumes_from:
      - dapr-config
    restart: unless-stopped
    depends_on:
      video-compressor:
        condition: service_started
      dapr-placement:
        condition: service_started
      dapr-config:
        condition: service_started
    network_mode: "service:video-compressor"

  dapr-placement:
    container_name: dapr-placement
    image: daprio/placement:1.13.5
    command: ["./placement", "-port", "40000", "-log-level", "debug"]
    ports:
      - "40000"
    restart: unless-stopped
    depends_on:
      zipkin:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672"
      - "15672:15672"
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "19411:9411"
    restart: unless-stopped

  dapr-config:
    container_name: dapr-config
    build:
      context: ./dapr
      dockerfile: Dockerfile

volumes:
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local
  rabbitmq-logs:
    driver: local

networks:
  default:
    name: course-crawler-network
    driver: bridge
