services:
  video-recorder:
    container_name: video-recorder
    build:
      context: ./video-recorder
      dockerfile: Dockerfile
    env_file:
      - config/.env.video-recorder
    restart: unless-stopped

  video-recorder-dapr:
    container_name: video-recorder-dapr
    image: daprio/daprd:1.13.5
    command:
      [
        "./daprd",
        "-app-id",
        "video-recorder",
        "-placement-host-address",
        "dapr-placement:40000",
        "-dapr-http-port",
        "3500",
        "-dapr-grpc-port",
        "50001",
        "-components-path",
        "/components",
        "-config",
        "/config/config.yaml",
      ]
    volumes_from:
      - dapr-config
    restart: unless-stopped
    depends_on:
      video-recorder:
        condition: service_started
      dapr-placement:
        condition: service_started
      dapr-config:
        condition: service_started
    network_mode: "service:video-recorder"

  video-compressor:
    container_name: video-compressor
    build:
      context: ./video-compressor
      dockerfile: Dockerfile
    ports:
      - "8080"
    env_file:
      - config/.env.video-compressor
    restart: unless-stopped

  video-compressor-dapr:
    container_name: video-compressor-dapr
    image: daprio/daprd:1.13.5
    command:
      [
        "./daprd",
        "-app-id",
        "video-compressor",
        "-app-port",
        "8080",
        "-placement-host-address",
        "dapr-placement:40000",
        "-dapr-http-port",
        "3501",
        "-dapr-grpc-port",
        "50002",
        "-components-path",
        "/components",
        "-config",
        "/config/config.yaml",
      ]
    volumes_from:
      - dapr-config
    restart: unless-stopped
    depends_on:
      video-compressor:
        condition: service_started
      dapr-placement:
        condition: service_started
      dapr-config:
        condition: service_started
    network_mode: "service:video-compressor"

  dapr-placement:
    container_name: dapr-placement
    image: daprio/placement:1.13.5
    command: ["./placement", "-port", "40000", "-log-level", "debug"]
    ports:
      - "40000"
    restart: unless-stopped
    depends_on:
      zipkin:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672"
      - "15672:15672"
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "19411:9411"
    restart: unless-stopped

  dapr-config:
    container_name: dapr-config
    build:
      context: ./dapr
      dockerfile: Dockerfile

volumes:
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local
  rabbitmq-logs:
    driver: local

networks:
  default:
    name: course-crawler-network
    driver: bridge